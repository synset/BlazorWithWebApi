@page "/customers"
@using Blazor.Models
@inject HttpClient http 


@*skapar en container med lite indrag från kanterna*@
<div class="container">
    @*skapar en knapp i högra hörn som kör en function vid click*@
    <div class="text-right">
        <button type="submit" class="btn btn-danger" @onclick="DeleteAllCustomers">Ta bort alla kunder!</button>
    </div>

    @*skapar ett formulär som binds till objektet customer*@
<EditForm class="my-5" Model="@customer" OnSubmit="@CreateCustomer">
    <h5 class="mb-3">Skapa en Kund</h5>
    <div class="form-group">
        <div class="row">
            <div class="column">
                <input type="text" class="form-control" placeholder="Förnamn..." @bind="customer.FirstName" />
            </div>
            <div class="column">
                <input type="text" class="form-control" placeholder="Efternamn..." @bind="customer.LastName" />
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <input type="text" class="form-control" placeholder="E-postadress..." @bind="customer.Email" />
        </div>
    </div>
    <div class="form-group">
        <div class="row">
            <button type="submit" class="btn btn-success">Skapa Kund</button>
        </div>
    </div>
</EditForm>

    @*tabell som listar alla kunder, möjlighet att radera kund*@
    <table class="table">
        <thead class="thead-light">
            <tr>
                <th scope="col">#</th>
                <th scope="col">Förnamn</th>
                <th scope="col">Efternamn</th>
                <th scope="col" colspan="2">E-postadress</th>
            </tr>
        </thead>
        @if(customers != null)
        {
            <tbody>
                @foreach (var customer in customers)
                {
                <tr>
                    <th scope="col">@customer.Id</th>
                    <th scope="col">@customer.FirstName</th>
                    <th scope="col">@customer.LastName</th>
                    <th scope="col" colspan="2">@customer.Email</th>
                    <td class="text-center">
                        <span style="cursor: pointer"class="oi oi-trash" @onclick="() => DeleteCustomer(customer.Id)"></span>
                    </td>
                </tr>
                }
            </tbody>
        }
    </table>
</div>








@code {

    private List<CustomerModel> customers;
    private CustomerCreateModel customer;

    private async Task GetCustomers()
    {
        customers = await http.GetJsonAsync<List<CustomerModel>>("http://localhost:49521/api/customers");
        StateHasChanged();
    }

    private async Task CreateCustomer()
    {
        await http.PostJsonAsync<List<CustomerCreateModel>>("http://localhost:49521/api/customers", customer);

        customer = new CustomerCreateModel();
        await GetCustomers();
    }

    private async Task DeleteAllCustomers()
    {
        await http.DeleteAsync("http://localhost:49521/api/customers/all");
        await GetCustomers();
    }

    private async Task DeleteCustomer(int id)
    {
        await http.DeleteAsync("http://localhost:49521/api/customers/{id}");
        await GetCustomers();
    }

    //körs när sidan laddas
    //nollställer formuläret
    protected override async Task OnInitializedAsync()
    {
        customer = new CustomerCreateModel();
        await GetCustomers();
    }
}